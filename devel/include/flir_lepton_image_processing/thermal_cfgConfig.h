//#line 2 "/home/pi/catkin_ws/install/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the flir_lepton_image_processing package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __flir_lepton_image_processing__THERMAL_CFGCONFIG_H__
#define __flir_lepton_image_processing__THERMAL_CFGCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace flir_lepton_image_processing
{
  class thermal_cfgConfigStatics;

  class thermal_cfgConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(thermal_cfgConfig &config, const thermal_cfgConfig &max, const thermal_cfgConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const thermal_cfgConfig &config1, const thermal_cfgConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, thermal_cfgConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const thermal_cfgConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, thermal_cfgConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const thermal_cfgConfig &config) const = 0;
      virtual void getValue(const thermal_cfgConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T thermal_cfgConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T thermal_cfgConfig::* field;

      virtual void clamp(thermal_cfgConfig &config, const thermal_cfgConfig &max, const thermal_cfgConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const thermal_cfgConfig &config1, const thermal_cfgConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, thermal_cfgConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const thermal_cfgConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, thermal_cfgConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const thermal_cfgConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const thermal_cfgConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, thermal_cfgConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, thermal_cfgConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<thermal_cfgConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(thermal_cfgConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("show_thermal_image"==(*_i)->name){show_thermal_image = boost::any_cast<bool>(val);}
        if("detection_method"==(*_i)->name){detection_method = boost::any_cast<int>(val);}
        if("low_temperature"==(*_i)->name){low_temperature = boost::any_cast<double>(val);}
        if("high_temperature"==(*_i)->name){high_temperature = boost::any_cast<double>(val);}
        if("edge_detection_method"==(*_i)->name){edge_detection_method = boost::any_cast<int>(val);}
        if("canny_ratio"==(*_i)->name){canny_ratio = boost::any_cast<int>(val);}
        if("canny_kernel_size"==(*_i)->name){canny_kernel_size = boost::any_cast<int>(val);}
        if("canny_low_threshold"==(*_i)->name){canny_low_threshold = boost::any_cast<int>(val);}
        if("canny_blur_noise_kernel_size"==(*_i)->name){canny_blur_noise_kernel_size = boost::any_cast<int>(val);}
        if("contrast_enhance_beta"==(*_i)->name){contrast_enhance_beta = boost::any_cast<int>(val);}
        if("contrast_enhance_alpha"==(*_i)->name){contrast_enhance_alpha = boost::any_cast<int>(val);}
        if("denoised_edges_threshold"==(*_i)->name){denoised_edges_threshold = boost::any_cast<int>(val);}
        if("min_threshold"==(*_i)->name){min_threshold = boost::any_cast<int>(val);}
        if("max_threshold"==(*_i)->name){max_threshold = boost::any_cast<int>(val);}
        if("threshold_step"==(*_i)->name){threshold_step = boost::any_cast<int>(val);}
        if("min_area"==(*_i)->name){min_area = boost::any_cast<int>(val);}
        if("max_area"==(*_i)->name){max_area = boost::any_cast<int>(val);}
        if("min_convexity"==(*_i)->name){min_convexity = boost::any_cast<double>(val);}
        if("max_convexity"==(*_i)->name){max_convexity = boost::any_cast<double>(val);}
        if("min_inertia_ratio"==(*_i)->name){min_inertia_ratio = boost::any_cast<double>(val);}
        if("max_circularity"==(*_i)->name){max_circularity = boost::any_cast<double>(val);}
        if("min_circularity"==(*_i)->name){min_circularity = boost::any_cast<double>(val);}
        if("filter_by_color"==(*_i)->name){filter_by_color = boost::any_cast<bool>(val);}
        if("filter_by_circularity"==(*_i)->name){filter_by_circularity = boost::any_cast<bool>(val);}
        if("outline_detection_method"==(*_i)->name){outline_detection_method = boost::any_cast<int>(val);}
        if("raycast_keypoint_partitions"==(*_i)->name){raycast_keypoint_partitions = boost::any_cast<int>(val);}
        if("AB_to_MO_ratio"==(*_i)->name){AB_to_MO_ratio = boost::any_cast<int>(val);}
        if("minimum_curve_points"==(*_i)->name){minimum_curve_points = boost::any_cast<int>(val);}
        if("scale_method"==(*_i)->name){scale_method = boost::any_cast<int>(val);}
        if("show_find_rois"==(*_i)->name){show_find_rois = boost::any_cast<bool>(val);}
        if("show_find_rois_size"==(*_i)->name){show_find_rois_size = boost::any_cast<int>(val);}
        if("show_denoise_edges"==(*_i)->name){show_denoise_edges = boost::any_cast<bool>(val);}
        if("show_denoise_edges_size"==(*_i)->name){show_denoise_edges_size = boost::any_cast<int>(val);}
        if("show_connect_pairs"==(*_i)->name){show_connect_pairs = boost::any_cast<bool>(val);}
        if("show_connect_pairs_size"==(*_i)->name){show_connect_pairs_size = boost::any_cast<int>(val);}
        if("show_get_shapes_clear_border"==(*_i)->name){show_get_shapes_clear_border = boost::any_cast<bool>(val);}
        if("show_get_shapes_clear_border_size"==(*_i)->name){show_get_shapes_clear_border_size = boost::any_cast<int>(val);}
        if("probability_method"==(*_i)->name){probability_method = boost::any_cast<int>(val);}
        if("min_thermal_probability"==(*_i)->name){min_thermal_probability = boost::any_cast<double>(val);}
        if("optimal_temperature"==(*_i)->name){optimal_temperature = boost::any_cast<double>(val);}
        if("tolerance"==(*_i)->name){tolerance = boost::any_cast<double>(val);}
        if("low_acceptable_temperature"==(*_i)->name){low_acceptable_temperature = boost::any_cast<double>(val);}
        if("high_acceptable_temperature"==(*_i)->name){high_acceptable_temperature = boost::any_cast<double>(val);}
        if("left_tolerance"==(*_i)->name){left_tolerance = boost::any_cast<double>(val);}
        if("right_tolerance"==(*_i)->name){right_tolerance = boost::any_cast<double>(val);}
      }
    }

    bool show_thermal_image;
int detection_method;
double low_temperature;
double high_temperature;
int edge_detection_method;
int canny_ratio;
int canny_kernel_size;
int canny_low_threshold;
int canny_blur_noise_kernel_size;
int contrast_enhance_beta;
int contrast_enhance_alpha;
int denoised_edges_threshold;
int min_threshold;
int max_threshold;
int threshold_step;
int min_area;
int max_area;
double min_convexity;
double max_convexity;
double min_inertia_ratio;
double max_circularity;
double min_circularity;
bool filter_by_color;
bool filter_by_circularity;
int outline_detection_method;
int raycast_keypoint_partitions;
int AB_to_MO_ratio;
int minimum_curve_points;
int scale_method;
bool show_find_rois;
int show_find_rois_size;
bool show_denoise_edges;
int show_denoise_edges_size;
bool show_connect_pairs;
int show_connect_pairs_size;
bool show_get_shapes_clear_border;
int show_get_shapes_clear_border_size;
int probability_method;
double min_thermal_probability;
double optimal_temperature;
double tolerance;
double low_acceptable_temperature;
double high_acceptable_temperature;
double left_tolerance;
double right_tolerance;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      bool show_thermal_image;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int detection_method;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double low_temperature;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double high_temperature;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int edge_detection_method;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int canny_ratio;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int canny_kernel_size;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int canny_low_threshold;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int canny_blur_noise_kernel_size;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int contrast_enhance_beta;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int contrast_enhance_alpha;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int denoised_edges_threshold;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_threshold;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int max_threshold;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int threshold_step;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_area;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int max_area;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_convexity;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_convexity;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_inertia_ratio;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_circularity;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_circularity;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      bool filter_by_color;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      bool filter_by_circularity;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int outline_detection_method;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int raycast_keypoint_partitions;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int AB_to_MO_ratio;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int minimum_curve_points;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int scale_method;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      bool show_find_rois;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int show_find_rois_size;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      bool show_denoise_edges;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int show_denoise_edges_size;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      bool show_connect_pairs;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int show_connect_pairs_size;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      bool show_get_shapes_clear_border;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int show_get_shapes_clear_border_size;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      int probability_method;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_thermal_probability;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double optimal_temperature;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double tolerance;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double low_acceptable_temperature;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double high_acceptable_temperature;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double left_tolerance;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      double right_tolerance;
//#line 231 "/home/pi/catkin_ws/install/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("thermal_cfgConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const thermal_cfgConfig &__max__ = __getMax__();
      const thermal_cfgConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const thermal_cfgConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const thermal_cfgConfig &__getDefault__();
    static const thermal_cfgConfig &__getMax__();
    static const thermal_cfgConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const thermal_cfgConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void thermal_cfgConfig::ParamDescription<std::string>::clamp(thermal_cfgConfig &config, const thermal_cfgConfig &max, const thermal_cfgConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class thermal_cfgConfigStatics
  {
    friend class thermal_cfgConfig;

    thermal_cfgConfigStatics()
    {
thermal_cfgConfig::GroupDescription<thermal_cfgConfig::DEFAULT, thermal_cfgConfig> Default("Default", "", 0, 0, true, &thermal_cfgConfig::groups);
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_thermal_image = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_thermal_image = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_thermal_image = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_thermal_image", "bool", 0, "", "", &thermal_cfgConfig::show_thermal_image)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_thermal_image", "bool", 0, "", "", &thermal_cfgConfig::show_thermal_image)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.detection_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.detection_method = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.detection_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("detection_method", "int", 1, "0 for binary image-1 for sensor/Image", "", &thermal_cfgConfig::detection_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("detection_method", "int", 1, "0 for binary image-1 for sensor/Image", "", &thermal_cfgConfig::detection_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.low_temperature = 20.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.low_temperature = 80.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.low_temperature = 27.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("low_temperature", "double", 0, "Used when detection method is 0", "", &thermal_cfgConfig::low_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("low_temperature", "double", 0, "Used when detection method is 0", "", &thermal_cfgConfig::low_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.high_temperature = 20.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.high_temperature = 80.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.high_temperature = 70.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("high_temperature", "double", 0, "Used when detection method is 0", "", &thermal_cfgConfig::high_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("high_temperature", "double", 0, "Used when detection method is 0", "", &thermal_cfgConfig::high_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.edge_detection_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.edge_detection_method = 4;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.edge_detection_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("edge_detection_method", "int", 0, "", "{'enum': [{'name': 'Canny_edge_detector', 'type': 'int', 'value': 0, 'srcline': 23, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Scharr_edge_detector', 'type': 'int', 'value': 1, 'srcline': 24, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Sobel_edge_detector', 'type': 'int', 'value': 2, 'srcline': 25, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Laplacian_edge_detector', 'type': 'int', 'value': 3, 'srcline': 26, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Mixed_edge_detector', 'type': 'int', 'value': 4, 'srcline': 27, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': ''}", &thermal_cfgConfig::edge_detection_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("edge_detection_method", "int", 0, "", "{'enum': [{'name': 'Canny_edge_detector', 'type': 'int', 'value': 0, 'srcline': 23, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Scharr_edge_detector', 'type': 'int', 'value': 1, 'srcline': 24, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Sobel_edge_detector', 'type': 'int', 'value': 2, 'srcline': 25, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Laplacian_edge_detector', 'type': 'int', 'value': 3, 'srcline': 26, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Mixed_edge_detector', 'type': 'int', 'value': 4, 'srcline': 27, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': ''}", &thermal_cfgConfig::edge_detection_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.canny_ratio = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.canny_ratio = 10;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.canny_ratio = 3;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("canny_ratio", "int", 0, "", "", &thermal_cfgConfig::canny_ratio)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("canny_ratio", "int", 0, "", "", &thermal_cfgConfig::canny_ratio)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.canny_kernel_size = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.canny_kernel_size = 10;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.canny_kernel_size = 3;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("canny_kernel_size", "int", 0, "", "", &thermal_cfgConfig::canny_kernel_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("canny_kernel_size", "int", 0, "", "", &thermal_cfgConfig::canny_kernel_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.canny_low_threshold = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.canny_low_threshold = 255;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.canny_low_threshold = 10;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("canny_low_threshold", "int", 0, "", "", &thermal_cfgConfig::canny_low_threshold)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("canny_low_threshold", "int", 0, "", "", &thermal_cfgConfig::canny_low_threshold)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.canny_blur_noise_kernel_size = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.canny_blur_noise_kernel_size = 10;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.canny_blur_noise_kernel_size = 3;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("canny_blur_noise_kernel_size", "int", 0, "", "", &thermal_cfgConfig::canny_blur_noise_kernel_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("canny_blur_noise_kernel_size", "int", 0, "", "", &thermal_cfgConfig::canny_blur_noise_kernel_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.contrast_enhance_beta = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.contrast_enhance_beta = 10;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.contrast_enhance_beta = 2;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("contrast_enhance_beta", "int", 0, "", "", &thermal_cfgConfig::contrast_enhance_beta)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("contrast_enhance_beta", "int", 0, "", "", &thermal_cfgConfig::contrast_enhance_beta)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.contrast_enhance_alpha = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.contrast_enhance_alpha = 10;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.contrast_enhance_alpha = 2;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("contrast_enhance_alpha", "int", 0, "", "", &thermal_cfgConfig::contrast_enhance_alpha)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("contrast_enhance_alpha", "int", 0, "", "", &thermal_cfgConfig::contrast_enhance_alpha)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.denoised_edges_threshold = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.denoised_edges_threshold = 255;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.denoised_edges_threshold = 130;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("denoised_edges_threshold", "int", 0, "", "", &thermal_cfgConfig::denoised_edges_threshold)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("denoised_edges_threshold", "int", 0, "", "", &thermal_cfgConfig::denoised_edges_threshold)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_threshold = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_threshold = 5000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_threshold = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("min_threshold", "int", 0, "", "", &thermal_cfgConfig::min_threshold)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("min_threshold", "int", 0, "", "", &thermal_cfgConfig::min_threshold)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_threshold = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_threshold = 5000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_threshold = 200;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("max_threshold", "int", 0, "", "", &thermal_cfgConfig::max_threshold)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("max_threshold", "int", 0, "", "", &thermal_cfgConfig::max_threshold)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_step = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_step = 100;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_step = 100;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("threshold_step", "int", 0, "", "", &thermal_cfgConfig::threshold_step)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("threshold_step", "int", 0, "", "", &thermal_cfgConfig::threshold_step)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_area = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_area = 1000000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_area = 100;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("min_area", "int", 0, "", "", &thermal_cfgConfig::min_area)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("min_area", "int", 0, "", "", &thermal_cfgConfig::min_area)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_area = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_area = 302700;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_area = 181000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("max_area", "int", 0, "", "", &thermal_cfgConfig::max_area)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("max_area", "int", 0, "", "", &thermal_cfgConfig::max_area)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_convexity = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_convexity = 100.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_convexity = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("min_convexity", "double", 0, "", "", &thermal_cfgConfig::min_convexity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("min_convexity", "double", 0, "", "", &thermal_cfgConfig::min_convexity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_convexity = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_convexity = 100.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_convexity = 100.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("max_convexity", "double", 0, "", "", &thermal_cfgConfig::max_convexity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("max_convexity", "double", 0, "", "", &thermal_cfgConfig::max_convexity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_inertia_ratio = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_inertia_ratio = 100.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_inertia_ratio = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("min_inertia_ratio", "double", 0, "", "", &thermal_cfgConfig::min_inertia_ratio)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("min_inertia_ratio", "double", 0, "", "", &thermal_cfgConfig::min_inertia_ratio)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_circularity = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_circularity = 1.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_circularity = 1.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("max_circularity", "double", 0, "", "", &thermal_cfgConfig::max_circularity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("max_circularity", "double", 0, "", "", &thermal_cfgConfig::max_circularity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_circularity = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_circularity = 1.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_circularity = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("min_circularity", "double", 0, "", "", &thermal_cfgConfig::min_circularity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("min_circularity", "double", 0, "", "", &thermal_cfgConfig::min_circularity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.filter_by_color = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.filter_by_color = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.filter_by_color = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("filter_by_color", "bool", 0, "", "", &thermal_cfgConfig::filter_by_color)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("filter_by_color", "bool", 0, "", "", &thermal_cfgConfig::filter_by_color)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.filter_by_circularity = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.filter_by_circularity = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.filter_by_circularity = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("filter_by_circularity", "bool", 0, "", "", &thermal_cfgConfig::filter_by_circularity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("filter_by_circularity", "bool", 0, "", "", &thermal_cfgConfig::filter_by_circularity)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.outline_detection_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.outline_detection_method = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.outline_detection_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("outline_detection_method", "int", 0, "", "{'enum': [{'name': 'Brushfire_bounding_box_detection', 'type': 'int', 'value': 0, 'srcline': 61, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Raycast_bounding_box_detection', 'type': 'int', 'value': 1, 'srcline': 62, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': ''}", &thermal_cfgConfig::outline_detection_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("outline_detection_method", "int", 0, "", "{'enum': [{'name': 'Brushfire_bounding_box_detection', 'type': 'int', 'value': 0, 'srcline': 61, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Raycast_bounding_box_detection', 'type': 'int', 'value': 1, 'srcline': 62, 'srcfile': '/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg', 'description': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': ''}", &thermal_cfgConfig::outline_detection_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.raycast_keypoint_partitions = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.raycast_keypoint_partitions = 128;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.raycast_keypoint_partitions = 32;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("raycast_keypoint_partitions", "int", 0, "", "", &thermal_cfgConfig::raycast_keypoint_partitions)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("raycast_keypoint_partitions", "int", 0, "", "", &thermal_cfgConfig::raycast_keypoint_partitions)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AB_to_MO_ratio = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AB_to_MO_ratio = 10;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AB_to_MO_ratio = 4;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("AB_to_MO_ratio", "int", 0, "", "", &thermal_cfgConfig::AB_to_MO_ratio)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("AB_to_MO_ratio", "int", 0, "", "", &thermal_cfgConfig::AB_to_MO_ratio)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.minimum_curve_points = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.minimum_curve_points = 1000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.minimum_curve_points = 50;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("minimum_curve_points", "int", 0, "", "", &thermal_cfgConfig::minimum_curve_points)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("minimum_curve_points", "int", 0, "", "", &thermal_cfgConfig::minimum_curve_points)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scale_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scale_method = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scale_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("scale_method", "int", 0, "", "", &thermal_cfgConfig::scale_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("scale_method", "int", 0, "", "", &thermal_cfgConfig::scale_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_find_rois = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_find_rois = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_find_rois = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_find_rois", "bool", 0, "", "", &thermal_cfgConfig::show_find_rois)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_find_rois", "bool", 0, "", "", &thermal_cfgConfig::show_find_rois)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_find_rois_size = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_find_rois_size = 3000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_find_rois_size = 1200;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("show_find_rois_size", "int", 0, "", "", &thermal_cfgConfig::show_find_rois_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("show_find_rois_size", "int", 0, "", "", &thermal_cfgConfig::show_find_rois_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_denoise_edges = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_denoise_edges = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_denoise_edges = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_denoise_edges", "bool", 0, "", "", &thermal_cfgConfig::show_denoise_edges)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_denoise_edges", "bool", 0, "", "", &thermal_cfgConfig::show_denoise_edges)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_denoise_edges_size = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_denoise_edges_size = 3000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_denoise_edges_size = 1200;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("show_denoise_edges_size", "int", 0, "", "", &thermal_cfgConfig::show_denoise_edges_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("show_denoise_edges_size", "int", 0, "", "", &thermal_cfgConfig::show_denoise_edges_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_connect_pairs = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_connect_pairs = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_connect_pairs = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_connect_pairs", "bool", 0, "", "", &thermal_cfgConfig::show_connect_pairs)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_connect_pairs", "bool", 0, "", "", &thermal_cfgConfig::show_connect_pairs)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_connect_pairs_size = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_connect_pairs_size = 3000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_connect_pairs_size = 1200;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("show_connect_pairs_size", "int", 0, "", "", &thermal_cfgConfig::show_connect_pairs_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("show_connect_pairs_size", "int", 0, "", "", &thermal_cfgConfig::show_connect_pairs_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_get_shapes_clear_border = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_get_shapes_clear_border = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_get_shapes_clear_border = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_get_shapes_clear_border", "bool", 0, "", "", &thermal_cfgConfig::show_get_shapes_clear_border)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<bool>("show_get_shapes_clear_border", "bool", 0, "", "", &thermal_cfgConfig::show_get_shapes_clear_border)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_get_shapes_clear_border_size = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_get_shapes_clear_border_size = 3000;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_get_shapes_clear_border_size = 1200;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("show_get_shapes_clear_border_size", "int", 0, "", "", &thermal_cfgConfig::show_get_shapes_clear_border_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("show_get_shapes_clear_border_size", "int", 0, "", "", &thermal_cfgConfig::show_get_shapes_clear_border_size)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.probability_method = 0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.probability_method = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.probability_method = 1;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("probability_method", "int", 0, "", "", &thermal_cfgConfig::probability_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<int>("probability_method", "int", 0, "", "", &thermal_cfgConfig::probability_method)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_thermal_probability = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_thermal_probability = 1.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_thermal_probability = 0.2;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("min_thermal_probability", "double", 0, "Min thermal's probabability", "", &thermal_cfgConfig::min_thermal_probability)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("min_thermal_probability", "double", 0, "Min thermal's probabability", "", &thermal_cfgConfig::min_thermal_probability)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.optimal_temperature = 20.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.optimal_temperature = 50.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.optimal_temperature = 37.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("optimal_temperature", "double", 0, "Gaussian_Probability", "", &thermal_cfgConfig::optimal_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("optimal_temperature", "double", 0, "Gaussian_Probability", "", &thermal_cfgConfig::optimal_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.tolerance = 0.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.tolerance = 25.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.tolerance = 10.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("tolerance", "double", 0, "Gaussian_Probability", "", &thermal_cfgConfig::tolerance)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("tolerance", "double", 0, "Gaussian_Probability", "", &thermal_cfgConfig::tolerance)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.low_acceptable_temperature = 20.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.low_acceptable_temperature = 80.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.low_acceptable_temperature = 27.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("low_acceptable_temperature", "double", 0, "Logistic_Probability", "", &thermal_cfgConfig::low_acceptable_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("low_acceptable_temperature", "double", 0, "Logistic_Probability", "", &thermal_cfgConfig::low_acceptable_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.high_acceptable_temperature = 20.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.high_acceptable_temperature = 80.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.high_acceptable_temperature = 70.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("high_acceptable_temperature", "double", 0, "Logistic_Probability", "", &thermal_cfgConfig::high_acceptable_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("high_acceptable_temperature", "double", 0, "Logistic_Probability", "", &thermal_cfgConfig::high_acceptable_temperature)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.left_tolerance = 1.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.left_tolerance = 10.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.left_tolerance = 4.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("left_tolerance", "double", 0, "Logistic_Probability- Big value means small tolerance", "", &thermal_cfgConfig::left_tolerance)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("left_tolerance", "double", 0, "Logistic_Probability- Big value means small tolerance", "", &thermal_cfgConfig::left_tolerance)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.right_tolerance = 1.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.right_tolerance = 10.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.right_tolerance = 8.0;
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("right_tolerance", "double", 0, "Logistic_Probability- Big value means small tolerance", "", &thermal_cfgConfig::right_tolerance)));
//#line 291 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(thermal_cfgConfig::AbstractParamDescriptionConstPtr(new thermal_cfgConfig::ParamDescription<double>("right_tolerance", "double", 0, "Logistic_Probability- Big value means small tolerance", "", &thermal_cfgConfig::right_tolerance)));
//#line 246 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/home/pi/catkin_ws/src/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(thermal_cfgConfig::AbstractGroupDescriptionConstPtr(new thermal_cfgConfig::GroupDescription<thermal_cfgConfig::DEFAULT, thermal_cfgConfig>(Default)));
//#line 369 "/home/pi/catkin_ws/install/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<thermal_cfgConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<thermal_cfgConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<thermal_cfgConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    thermal_cfgConfig __max__;
    thermal_cfgConfig __min__;
    thermal_cfgConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const thermal_cfgConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static thermal_cfgConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &thermal_cfgConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const thermal_cfgConfig &thermal_cfgConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const thermal_cfgConfig &thermal_cfgConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const thermal_cfgConfig &thermal_cfgConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<thermal_cfgConfig::AbstractParamDescriptionConstPtr> &thermal_cfgConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<thermal_cfgConfig::AbstractGroupDescriptionConstPtr> &thermal_cfgConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const thermal_cfgConfigStatics *thermal_cfgConfig::__get_statics__()
  {
    const static thermal_cfgConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = thermal_cfgConfigStatics::get_instance();

    return statics;
  }

//#line 23 "/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg"
      const int thermal_cfg_Canny_edge_detector = 0;
//#line 24 "/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg"
      const int thermal_cfg_Scharr_edge_detector = 1;
//#line 25 "/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg"
      const int thermal_cfg_Sobel_edge_detector = 2;
//#line 26 "/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg"
      const int thermal_cfg_Laplacian_edge_detector = 3;
//#line 27 "/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg"
      const int thermal_cfg_Mixed_edge_detector = 4;
//#line 61 "/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg"
      const int thermal_cfg_Brushfire_bounding_box_detection = 0;
//#line 62 "/home/pi/catkin_ws/src/flir_lepton/flir_lepton_image_processing/cfg/thermal_cfg.cfg"
      const int thermal_cfg_Raycast_bounding_box_detection = 1;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __THERMAL_CFGRECONFIGURATOR_H__
